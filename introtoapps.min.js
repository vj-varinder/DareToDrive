(function() {
    var e, S = [].indexOf || function(e) {
        for (var p = 0, x = this.length; p < x; p++)
            if (p in this && this[p] === e) return p;
        return -1
    };
    window.isArray = Array.isArray || function(e) {
        return "[object Array]" === {}.toString.call(e)
    };
    window.isFunction = function(e) {
        return "function" === typeof e
    };
    window.isObject = function(e) {
        return "object" === typeof e && null !== e
    };
    window.isString = function(e) {
        return "string" === typeof e && null !== e
    };
    window.isNumber = function(e) {
        return "number" === typeof e && null !== e
    };
    String.prototype.contains = function(e) {
        return -1 !==
            this.indexOf(e)
    };
    Array.prototype.contains = function(e) {
        var p;
        for (p = this.length; p--;)
            if (this[p] === e) return !0;
        return !1
    };
    Array.prototype.removeIndex = function(e) {
        return this.splice(e, 1)
    };
    window.random = function(e, p) {
        return null != p ? Math.round(Math.random() * (p - e)) + e : Math.round(Math.random() * e)
    };
    window[e] = e = {
        debuggingOn: !1,
        movingObjects: {},
        gravityObjects: {},
        lastUpdate: 0,
        gravity: 1,
        nextID: 1,
        animate: !1,
        paused: !1,
        init: function() {
            var w, p, x, D, E, F, B, z, G, q, A, H, I, J, K, L, M, y, N, O, P, Q, C, u, r, R, k;
            window.requestAnimFrame =
                function() {
                    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(b, a) {
                        return window.setTimeout(b, 16)
                    }
                }();
            A = function(b, a) {
                var f, d, g, h, e, n, t, v, s, m;
                s = b.z;
                m = a.z;
                if (s !== m) return !1;
                e = b.x;
                t = b.y;
                g = b.w;
                f = t + b.h;
                n = a.x;
                v = a.y;
                h = a.w;
                d = v + a.h;
                return s !== m || f < v || t > d || e + g < n || e > n + h ? !1 : !0
            };
            q = function(b) {
                var a;
                a = b.data("iid");
                null == a && (a = e.nextID++, b.data("iid", a));
                return null != e.movingObjects[a] ?
                    e.movingObjects[a] : {
                        id: a,
                        obj: b,
                        init: !1,
                        speed: 1,
                        moveTo: null,
                        autoRemoveOffScreen: !0,
                        angle: null,
                        actualAngle: null,
                        vy: 0,
                        collisions: []
                    }
            };
            G = function(b) {
                var a;
                a = b.data("iid");
                null == a && (a = e.nextID++, b.data("iid", a));
                return null != e.gravityObjects[a] ? e.gravityObjects[a] : {
                    id: a,
                    obj: b,
                    gravity: 1
                }
            };
            p = function() {
                var b, a, f, d, g, h, l, n, t, v, s, m, c;
                if (e.animate)
                    if (e.paused) e.lastUpdate = (new Date).getTime(), requestAnimFrame(p);
                    else {
                        if ((new Date).getTime() > e.lastUpdate + 16) {
                            g = $(window).width();
                            m = $(window).height();
                            d = e.movingObjects;
                            for (n in d) {
                                c = d[n];
                                h = c.obj.position();
                                if (null == c.x || null == c.y || 0 === c.x || 0 === c.y) c.x = h.left, c.y = h.top;
                                null == c.z && (c.z = c.obj.css("z-index"));
                                c.w = c.obj.outerWidth(!0);
                                c.h = c.obj.outerHeight(!0)
                            }
                            h = e.movingObjects;
                            for (n in h)
                                if (c = h[n], !c.init)
                                    for (f in c.init = !0, l = e.movingObjects, l) d = l[f], f !== n && ((null != c.onCollision || null != d.onCollision || c.autoBounceBack || d.autoBounceBack || c.autoBounceOff || d.autoBounceOff) && !d.collisions.contains(c.id) && !c.collisions.contains(d.id) && A(c, d)) && (c.collisions.push(d.id), d.collisions.push(c.id));
                            d = e.movingObjects;
                            for (n in d) {
                                c = d[n];
                                c.moveToNow = c.moveTo;
                                c.xMoveThisCycle = 0;
                                c.yMoveThisCycle = 0;
                                c.angle = c.actualAngle = 0;
                                t = !1;
                                l = null != c.speed ? c.speed / 100 * (g + m) : 0;
                                if ("number" === typeof c.moveToNow) {
                                    for (; 360 < c.moveToNow;) c.moveToNow -= 360;
                                    for (; - 360 > c.moveToNow;) c.moveToNow += 360;
                                    b = c.angle = c.actualAngle = c.moveToNow * (Math.PI / 180);
                                    c.xMoveThisCycle = Math.cos(b - Math.PI / 2) * l;
                                    c.yMoveThisCycle = Math.sin(b - Math.PI / 2) * l;
                                    c.x += Math.cos(b - Math.PI / 2) * l;
                                    c.y += Math.sin(b - Math.PI / 2) * l;
                                    c.obj.originalCssFunction("left", c.x +
                                        "px").originalCssFunction("top", c.y + "px");
                                    e.movingObjects[n] = c;
                                    t = !0
                                } else if (Array.isArray(c.moveToNow)) {
                                    t = c.x;
                                    v = c.y;
                                    b = c.moveToNow[0] - c.x;
                                    a = c.y - c.moveToNow[1];
                                    b = c.angle = c.actualAngle = Math.atan2(b, a);
                                    t !== c.moveToNow[0] && (c.xMoveThisCycle = Math.cos(b - Math.PI / 2) * l, c.x += Math.cos(b - Math.PI / 2) * l);
                                    v !== c.moveToNow[1] && (c.yMoveThisCycle = Math.sin(b - Math.PI / 2) * l, c.y += Math.sin(b - Math.PI / 2) * l);
                                    if (t <= c.moveToNow[0] && c.x >= c.moveToNow[0] || t >= c.moveToNow[0] && c.x <= c.moveToNow[0]) c.xMoveThisCycle = 0, c.x = c.moveToNow[0];
                                    if (v <= c.moveToNow[1] && c.y >= c.moveToNow[1] || v >= c.moveToNow[1] && c.y <= c.moveToNow[1]) c.yMoveThisCycle = 0, c.y = c.moveToNow[1];
                                    c.obj.originalCssFunction("left", c.x + "px").originalCssFunction("top", c.y + "px");
                                    if (c.x === c.moveToNow[0] && c.y === c.moveToNow[1]) {
                                        if (c.onMoveTo) try {
                                            c.onMoveTo()
                                        } finally {
                                            c.onMoveTo = null
                                        }
                                        c.angle = c.actualAngle = null
                                    }
                                    e.movingObjects[n] = c;
                                    t = !0
                                } else if (null != c.moveToNow && ("string" === typeof c.moveToNow || "object" === typeof c.moveToNow && "function" === typeof c.moveToNow.position) && (h = "string" ===
                                        typeof c.moveToNow ? $(c.moveToNow) : c.moveToNow, h = h.position(), null != h)) {
                                    t = c.x;
                                    v = c.y;
                                    b = h.left - c.x;
                                    a = c.y - h.top;
                                    b = c.angle = Math.atan2(b, a);
                                    t !== h.left && (c.x += Math.cos(b - Math.PI / 2) * l);
                                    v !== h.top && (c.y += Math.sin(b - Math.PI / 2) * l);
                                    if (t <= h.left && c.x >= h.left || t >= h.left && c.x <= h.left) c.x = h.left;
                                    if (v <= h.top && c.y >= h.top || v >= h.top && c.y <= h.top) c.y = h.top;
                                    c.obj.originalCssFunction("left", c.x + "px").originalCssFunction("top", c.y + "px");
                                    if (c.x === h.left && c.y === h.top && c.onMoveTo) try {
                                        c.onMoveTo()
                                    } finally {
                                        c.onMoveTo = null
                                    }
                                    e.movingObjects[n] =
                                        c;
                                    t = !0
                                }
                                null != c.weight && 0 < c.weight ? (h = c.obj.closest(".scene"), h = 0 < h.length && null != h.data("iid") ? gravityObjects[null != h.data("iid")] : null, h = null != h && null != h.gravity && "number" === typeof h.gravity ? h.gravity : e.gravity, null == c.vy && (c.vy = 0), c.vy += h * c.weight, c.y += c.vy, c.obj.originalCssFunction("top", c.y + "px"), b = c.xMoveThisCycle, a = c.yMoveThisCycle + c.vy, c.actualAngle = Math.atan2(b, -a), 0 > c.actualAngle && (c.actualAngle += 2 * Math.PI), e.movingObjects[n] = c, t = !0) : null != c.weight && (0 === c.weight && 0 !== c.vy) && (c.vy = 0, e.movingObjects[n] =
                                    c);
                                if (t && (c.autoRemoveOffScreen || null != c.onOffScreen) && (0 > c.x + c.w || 0 > c.y + c.h || c.x > g || c.y > m)) {
                                    c.autoRemoveOffScreen && (c.obj.originalRemoveFunction(), delete e.movingObjects[n]);
                                    try {
                                        null != (s = c.onOffScreen) && s.apply(c.obj)
                                    } catch (k) {}
                                }
                            }
                            s = e.movingObjects;
                            for (n in s)
                                for (f in c = s[n], m = e.movingObjects, m)
                                    if (d = m[f], f !== n) {
                                        if ((null != c.onCollision || null != d.onCollision || c.autoBounceBack || d.autoBounceBack || c.autoBounceOff || d.autoBounceOff) && !d.collisions.contains(c.id) && !c.collisions.contains(d.id) && A(c, d)) {
                                            c.collisions.push(d.id);
                                            d.collisions.push(c.id);
                                            if (null != c.onCollision) try {
                                                c.obj.onCollision = c.onCollision, c.obj.onCollision(d.obj)
                                            } catch (q) {
                                                g = q, console.log(g)
                                            }
                                            if (null != d.onCollision) try {
                                                d.obj.onCollision = d.onCollision, d.obj.onCollision(c.obj)
                                            } catch (r) {}
                                            jQuery.contains(document, c.obj[0]) && jQuery.contains(document, d.obj[0]) && (c.autoBounceBack ? c.obj.bounceBack(d.obj) : c.autoBounceOff && c.obj.bounceOff(d.obj), d.autoBounceBack ? d.obj.bounceBack(c.obj) : d.autoBounceOff && d.obj.bounceOff(c.obj))
                                        }
                                        g = l = 0;
                                        for (t = c.collisions.length; 0 <=
                                            t ? l < t : l > t; g = 0 <= t ? ++l : --l) h = c.collisions[g], d = e.movingObjects[h], e.movingObjects.hasOwnProperty(h) && jQuery.contains(document, d.obj[0]) && A(c, d) || c.collisions.removeIndex(g)
                                    }
                            e.lastUpdate = (new Date).getTime()
                        }
                        return requestAnimFrame(p)
                    }
            };
            r = function() {
                if (!e.animate) return e.animate = !0, u(), requestAnimFrame(p)
            };
            u = function() {
                var b, a, f, d, g;
                if (e.animate) {
                    b = document.getElementsByTagName("body")[0];
                    b = b.getElementsByTagName("*");
                    g = e.movingObjects;
                    for (d in g) f = g[d], jQuery.contains(document, f.obj[0]) || delete e.movingObjects[f.id];
                    g = [];
                    d = 0;
                    for (f = b.length; d < f; d++) a = b[d], a = $(a), null == a.data("iid") ? (a = q(a), g.push(e.movingObjects[a.id] = a)) : g.push(void 0);
                    return g
                }
            };
            window.globalHeight = function() {
                return $(window).height()
            };
            window.createOpenLinkFunction = function(b) {
                return function() {
                    return window.open(b, "_blank")
                }
            };
            window.ajaxCallToServer = function(b) {
                try {
                    return $.ajax({
                        url: b.url,
                        type: b.type,
                        data: b.data,
                        dataType: b.dataType,
                        async: !0,
                        success: b.successHandler,
                        error: function(a, d, g) {
                            a.responseJSON ? b.failureHandler(a.responseJSON) : error("Error calling webservice : " +
                                g);
                            return $.mobile.loading("hide")
                        }
                    })
                } catch (a) {
                    return error(a)
                }
            };
            window.get = function(b, a, f, d) {
                var g;
                try {
                    return g = "start", (window.location.href.startsWith("http://localhost") || window.location.href.startsWith("localhost") || window.location.href.startsWith("file://")) && 0 > b.indexOf("://") || b.startsWith("http://localhost") || b.startsWith("localhost"), g = "ready", g = "pre ajax", $.ajax({
                        type: "GET",
                        url: b,
                        timeout: 2E4,
                        crossDomain: !0,
                        success: function(f, g, e) {
                            var h;
                            try {
                                if (h = new Date(e.getResponseHeader("Last-Modified")),
                                    "function" === typeof a) return a(f, h)
                            } catch (l) {
                                if ("undefined" === typeof d || !0 === d) return errorLogOnly("get(" + b + ").followup", l.message)
                            }
                        },
                        error: function(a, d, g) {
                            if (!("string" === typeof g && 0 < g.length && 0 <= g.indexOf("Bad Gateway")) && (errorLogOnly("URL (" + b + "): " + d + " / " + g), "function" === typeof f)) return f("[" + d + "]: " + g)
                        }
                    }), g = "post ajax"
                } catch (e) {
                    try {
                        if ("undefined" === typeof d || !0 === d) return errorLogOnly("get", ui("errornocloud") + " () " + e.message + " (State: " + g + ")")
                    } catch (l) {}
                }
            };
            x = function(b, a) {
                var f, d;
                f = [];
                for (d =
                    a || 0; d < b.length;) f.push(b[d]), d++;
                return f
            };
            k = {};
            B = z = void 0;
            R = function(b, a, f, d) {
                var g, e;
                g = Math.abs(b - a);
                e = Math.abs(f - d);
                return g >= e ? 0 < b - a ? "Left" : "Right" : 0 < f - d ? "Up" : "Down"
            };
            F = function(b) {
                z = Clock.now();
                B = z - (k.last || z);
                k.el = $(parentIfText(b.touches[0].target));
                k.x1 = b.touches[0].pageX;
                k.y1 = b.touches[0].pageY;
                0 < B && 250 >= B && (k.isDoubleTap = !0);
                return k.last = z
            };
            E = function(b) {
                k.x2 = b.touches[0].pageX;
                return k.y2 = b.touches[0].pageY
            };
            D = function(b) {
                if (k.isDoubleTap) return k = {}, "doubleTap";
                if (k.x2 && 30 < Math.abs(k.x1 -
                        k.x2) || k.y2 && 30 < Math.abs(k.y1 - k.y2)) return k = {}, "swipe" + R(k.x1, k.x2, k.y1, k.y2);
                if ("last" in k) return k = {}, "tap";
                k = {};
                return ""
            };
            w = (H = !!(0 <= S.call(window, "ontouchstart"))) ? "touchend" : "click";
            I = jQuery.fn.add;
            K = jQuery.fn.append;
            L = jQuery.fn.appendTo;
            O = jQuery.fn.html;
            P = jQuery.fn.prepend;
            Q = jQuery.fn.prependTo;
            C = jQuery.fn.remove;
            N = jQuery.fn.empty;
            M = jQuery.fn.before;
            J = jQuery.fn.after;
            y = jQuery.fn.css;
            (function(b) {
                b.fn.add = function() {
                    var a;
                    a = I.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.append = function() {
                    var a;
                    a = K.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.appendTo = function() {
                    var a;
                    a = L.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.html = function() {
                    var a;
                    a = O.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.prepend = function() {
                    var a;
                    a = P.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.prependTo = function() {
                    var a;
                    a = Q.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.empty = function() {
                    var a;
                    a = N.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.before = function() {
                    var a;
                    a = M.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.after = function() {
                    var a;
                    a = J.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.remove = function() {
                    var a;
                    a = C.apply(this, arguments);
                    u();
                    return a
                };
                b.fn.originalRemoveFunction = C;
                b.fn.css = function(a, f) {
                    "top" !== a && "bottom" !== a && "left" !== a && "right" !== a || this.each(function() {
                        var d, g;
                        d = this.id ? this.id : "";
                        g = b(this);
                        e.debuggingOn && console.log(d + "(" + g.attr("class") + ").css(" + a + ", " + f + "): Changing value.");
                        if ("top" === a || "bottom" === a) y.apply(g, ["top", ""]), y.apply(g, ["bottom", ""]);
                        if ("left" === a || "right" === a) y.apply(g, ["left", ""]), y.apply(g, ["right", ""]);
                        d = q(g);
                        delete d.x;
                        delete d.y;
                        return e.movingObjects[d.id] = d
                    });
                    "z-index" === a && this.each(function() {
                        var a;
                        a = q(b(this));
                        delete a.z;
                        return e.movingObjects[a.id] = a
                    });
                    return y.apply(this, arguments)
                };
                b.fn.originalCssFunction = y;
                b.fn.isCollision = function(a) {
                    var f;
                    "string" === typeof a && (a = b(a));
                    f = q(this);
                    a = q(a);
                    return A(f, a)
                };
                b.fn.onCollision = function(a) {
                    e.animate || r();
                    return this.each(function() {
                        var f;
                        f = b(this);
                        f = q(f);
                        f.onCollision = a;
                        return e.movingObjects[f.id] = f
                    })
                };
                b.fn.speed = function(a) {
                    e.animate || r();
                    return this.each(function() {
                        var f;
                        f = b(this);
                        f = q(f);
                        f.speed = a;
                        return e.movingObjects[f.id] = f
                    })
                };
                b.fn.moveTo = function(a, f) {
                    e.animate || r();
                    return this.each(function() {
                        var d;
                        d = b(this);
                        d = q(d);
                        d.moveTo = null != f ? [a, f] : a;
                        d.xMoveThisCycle = 0;
                        d.yMoveThisCycle = 0;
                        return e.movingObjects[d.id] = d
                    })
                };
                b.fn.autoBounceBack = function(a) {
                    e.animate || r();
                    return this.each(function() {
                        var f;
                        f = q(b(this));
                        f.autoBounceBack = null != a ? a : !0;
                        return e.movingObjects[f.id] = f
                    })
                };
                b.fn.autoBounceOff = function(a) {
                    e.animate || r();
                    return this.each(function() {
                        var f;
                        f = q(b(this));
                        f.autoBounceOff = null != a ? a : !0;
                        return e.movingObjects[f.id] = f
                    })
                };
                b.fn.bounceBack = function(a) {
                    e.animate || r();
                    e.debuggingOn && console.log("[" + this.attr("id") + "] Bouncing back from: " + a.attr("id"));
                    return this.each(function() {
                        var a, d;
                        d = q(b(this));
                        null != d.angle && (a = d.angle > Math.PI ? d.angle - Math.PI : d.angle + Math.PI, d.moveTo = a * (180 / Math.PI));
                        return e.movingObjects[d.id] = d
                    })
                };
                b.fn.bounceOff = function(a) {
                    var f, d, g, h, l, n;
                    e.animate || r();
                    e.debuggingOn && console.log("[" + this.attr("id") + "] Bouncing off: " + a.attr("id"));
                    d = b(a);
                    l = d.offset().left;
                    n = d.offset().top;
                    g = d.outerHeight(!0);
                    d = d.outerWidth(!0);
                    f = n + g;
                    h = l + d;
                    return this.each(function() {
                        var d, g, s, m, c, k, p, r;
                        c = q(b(this));
                        if (null != c.angle || null != c.actualAngle) s = c.obj, k = s.offset().left, g = s.offset().top, m = s.outerHeight(!0), s = s.outerWidth(!0), d = g + m, p = k + s, m = null != c.actualAngle ? c.actualAngle : c.angle, m = s = m * (180 / Math.PI), 0 > m && (m += 360), 0 === m || 90 === m || 180 === m || 270 === m || 360 === m ? (m -= 180, 180 === s && (c.vy = 0)) : (r = Math.abs(d < n ? n - d : g - f), g = Math.abs(g > f ? g - f : n - d), d = Math.abs(p < l ? l - p : k -
                            h), k = Math.abs(k > h ? k - h : l - p), Math.min(d, k) < Math.min(r, g) ? k = 0 : (k = 90, 90 < s && 270 > s && (c.vy = 0)), m = (2 * k - m) * (Math.PI / 180), k = 1 * Math.cos(m), m = 1 * Math.sin(m), m = 180 * Math.atan2(m, k) / Math.PI), 0 > m && (m += 360), c.moveTo = m, e.movingObjects[c.id] = c;
                        if (null == c.moveTo && null != a && (k = q(b(a)), null != k.angle)) return c.moveTo = k.angle * (180 / Math.PI), e.movingObjects[c.id] = c
                    })
                };
                b.fn.onMoveComplete = function(a) {
                    e.animate || r();
                    return this.each(function() {
                        var f;
                        f = b(this);
                        f = q(f);
                        f.onMoveTo = a;
                        return e.movingObjects[f.id] = f
                    })
                };
                b.fn.autoRemoveOffScreen =
                    function(a) {
                        e.animate || r();
                        e.debuggingOn && console.log("[" + this.attr("id") + "] Automatically removing from the screen");
                        return this.each(function() {
                            var f;
                            f = q(b(this));
                            f.autoRemoveOffScreen = null != a ? a : !0;
                            return e.movingObjects[f.id] = f
                        })
                    };
                b.fn.onOffScreen = function(a) {
                    e.animate || r();
                    return this.each(function() {
                        var f;
                        f = b(this);
                        f = q(f);
                        f.onOffScreen = a;
                        return e.movingObjects[f.id] = f
                    })
                };
                b.fn.displayScene = function() {
                    if (!e.animate) return r()
                };
                b.fn.weight = function(a) {
                    e.animate || r();
                    return this.each(function() {
                        var f;
                        f = b(this);
                        f = q(f);
                        return null != a ? (f.weight = a, e.movingObjects[f.id] = f, this) : null != (null != f ? f.weight : void 0)
                    })
                };
                b.fn.gravity = function(a) {
                    e.animate || r();
                    return 0 === this.length ? e.gravity = a : this.each(function() {
                        var f;
                        f = b(this);
                        f = G(f);
                        f.gravity = a;
                        return e.gravityObjects[f.id] = f
                    })
                };
                window.gravity = function(a) {
                    return e.gravity = a
                };
                b.fn.stop = function() {
                    return this.each(function() {
                        var a;
                        a = b(this);
                        a = q(a);
                        a.weight = 0;
                        a.moveTo = null;
                        a.speed = 0;
                        a.vy = 0;
                        a.xMoveThisCycle = 0;
                        a.yMoveThisCycle = 0;
                        return e.movingObjects[a.id] =
                            a
                    })
                };
                b.fn.rotate = function(a) {
                    e.animate || r();
                    return this.each(function() {
                        return b(this).css({
                            "-webkit-transform": "rotate(" + a(NaN, {
                                "-moz-transform": "rotate(" + a(NaN, {
                                    "-ms-transform": "rotate(" + a(NaN, {
                                        transform: "rotate(" + a(NaN)
                                    })
                                })
                            })
                        })
                    })
                };
                b.fn.addChildren = function() {
                    var a, b;
                    try {
                        if (null == arguments || 0 === arguments.length) return this;
                        b = 1 !== arguments.length || null == arguments[0] || "undefined" === typeof arguments[0] || arguments[0] instanceof jQuery || !arguments[0].length ? arguments : arguments[0];
                        for (a = 0; a < b.length;) this.addChild(b[a]),
                            a++;
                        return this
                    } catch (d) {
                        throw a = d, Error("addChildren() -> " + a.message);
                    }
                };
                b.fn.prependChild = function(a) {
                    return b.fn.addChild(a, !0)
                };
                b.fn.addChild = function(a, b) {
                    var d, g;
                    try {
                        if (null == a) return this;
                        if ("undefined" === typeof a || null == a) throw Error("Undefined UI child... have you called a function, instead of providing the function name? (good: displayMain, bad: displayMain()), or called a create() function that doesn't return a htmlcode() object?");
                        if (!isArray(a) || a instanceof jQuery || "select" === this.ourType())
                            if ("function" ===
                                typeof a) this.onTap(a);
                            else {
                                g = this.uiData();
                                g.children || (g.children = []);
                                g.children.push(a);
                                if ("object" === typeof g.elementMap) {
                                    d = "object" === typeof a && "function" === typeof a.ourType ? a.ourType().toLowerCase() : typeof a;
                                    if ("function" === typeof g.elementMap[d]) return g.elementMap[d](this, a), this;
                                    if ("function" === typeof g.elementMap.other) return g.elementMap.other(this, a), this;
                                    if ("function" === typeof g.elementMap.object) return g.elementMap.object(this, a), this
                                }
                                "object" === typeof a ? b ? this.prepend(a) : this.append(a) :
                                    ("string" !== typeof a && (a = "" + a), g.text = g.text || [], g.text.push(a), this.append(uieval(a)))
                            }
                        else 0 < a.length && this.addChildren(a);
                        return this
                    } catch (e) {
                        throw Error("addChild(" + a + ") -> " + e.message);
                    }
                };
                b.fn.refresh = function() {
                    var a, f;
                    try {
                        a = this.children();
                        for (f = 0; f < a.length;) b(a[f]).refresh(), f++;
                        "object" === typeof this.uiData() && "function" === typeof this.uiData().refresh && this.uiData().refresh()
                    } catch (d) {
                        error(".refresh()", d.message)
                    }
                    return this
                };
                b.fn.clear = function() {
                    return this.html("")
                };
                b.fn.child = function(a) {
                    var b;
                    b = this.children().eq(a);
                    if (0 === b.length) throw Error("$.child(" + a + ") -> invalid index");
                    return b
                };
                b.fn.isType = function(a) {
                    return this.ourType().toLowerCase() === a.toLowerCase()
                };
                b.fn.ourType = function() {
                    var a;
                    try {
                        return a = this.uiData(), "object" === typeof a && "string" === typeof a.ourType ? a.ourType.toLowerCase() : this[0].tagName.toLowerCase()
                    } catch (b) {
                        error("ourType()", b.message)
                    }
                    return ""
                };
                b.fn.uiData = function(a, b) {
                    var d, g;
                    try {
                        g = 1;
                        if ("object" !== typeof this.uiObject) {
                            g = 2;
                            d = this.data("ui");
                            g = 3;
                            if ("object" !==
                                typeof d && (d = {}, "object" !== typeof d && error("$.uiData()", "d not set"), this.data("ui", d), g = 4, "object" !== typeof this.data("ui"))) throw Error("this.data(ui) didn't save (jq length: " + this.length + " type:" + (0 < this.length ? this[0].tagName.toUpperCase() : "no jquery element") + " , " + this.data() + "). No jquery DOM element in your query?");
                            "object" !== typeof this.uiObject && (this.uiObject = d)
                        }
                        g = 5;
                        "object" !== typeof this.uiObject && error("$.uiData()", "this.uiObject is undefined");
                        g = 6;
                        if ("undefined" === typeof a) return this.uiObject;
                        if (null == b) return this.data("ui")[a];
                        this.data("ui")[a] = b;
                        return this
                    } catch (e) {
                        throw Error("$.uiData(" + g + ") -> " + e.message);
                    }
                };
                b.fn.dataRole = function(a) {
                    this.attr("data-role", a);
                    return this
                };
                b.fn.dataInline = function(a) {
                    this.attr("data-inline", a);
                    return this
                };
                b.fn.dataPosition = function(a) {
                    this.attr("data-position", a);
                    return this
                };
                b.fn.dataDisplay = function(a) {
                    this.attr("data-display", a);
                    return this
                };
                b.fn.dataType = function(a) {
                    this.attr("data-type", a);
                    return this
                };
                b.fn.href = function(a) {
                    this.attr("href",
                        a);
                    return this
                };
                b.fn.src = function(a) {
                    this.attr("src", a);
                    return this
                };
                b.fn.datavalue = function(a) {
                    if (0 === arguments.length) return this.uiData().datavalue;
                    this.uiData().datavalue = a;
                    return this
                };
                b.fn.id = function(a) {
                    if (0 === arguments.length) return this.attr("id");
                    this.attr("id", a);
                    return this
                };
                b.fn.valid = function(a) {
                    var b, d;
                    try {
                        "undefined" !== typeof a && this.isType("textbox") && (b = this, d = div().attr("classname", "warning minibox-hidden"), this.addChild(d), this.children("input").on("input", function(g) {
                            g = a(b, g);
                            if ("undefined" !== typeof g && null != g) return d.html(g), d.css("display", "block")
                        }))
                    } catch (g) {
                        throw Error("$.valid(validationFunction) -> " + g.message);
                    }
                    return this
                };
                b.fn.inputtext = function(a) {
                    try {
                        if ("textbox" === this.ourType()) return "undefined" !== typeof a ? (this.children("input").val(a), this) : this.children("input").val()
                    } catch (b) {
                        throw Error("$.text() -> " + b.message);
                    }
                    return null
                };
                b.fn.label = function() {
                    this.addChild(label.apply(this, arguments));
                    return this
                };
                b.fn.name = function(a) {
                    this.attr("name", a);
                    return this
                };
                b.fn.hasAttr = function(a) {
                    return void 0 !== this.attr(a)
                };
                b.valHooks.textarea = {
                    get: function(a) {
                        return a.value.replace(/\r?\n/g, "\r\n")
                    }
                };
                b.fn.disable = function() {
                    var a;
                    try {
                        a = this.uiData();
                        a.disabled = !0;
                        if ("function" === typeof a.disable) return a.disable();
                        if (this.isType("A")) return this.addClass("disabled")
                    } catch (b) {
                        throw Error("$.disable() -> " + b.message);
                    }
                };
                b.fn.enable = function() {
                    var a;
                    try {
                        a = this.uiData();
                        a.disabled = !1;
                        if ("function" === typeof a.enable) return a.enable();
                        if (this.isType("A")) return this.removeClass("disabled")
                    } catch (b) {
                        throw Error("$.enable() -> " +
                            b.message);
                    }
                };
                b.fn.checked = function(a) {
                    try {
                        if ("checkbox" === this.ourType()) return "undefined" !== typeof a ? (a ? this.children("input").attr("checked", "checked") : this.children("input").removeAttr("checked"), this) : this.children("input")[0].checked
                    } catch (b) {
                        throw Error("$.checked() -> " + b.message);
                    }
                    return null
                };
                b.fn.value = function(a) {
                    try {
                        return null != this.uiData().value ? this.uiData().value(a) : "checkbox" === this.ourType() ? this.checked(a) : "undefined" === typeof a ? this.val() : this.val(a)
                    } catch (b) {
                        return error("$.fn.value(" +
                            a + "): are you using event instead of event.target?", b)
                    }
                };
                b.fn.onTap = function(a, f) {
                    this.uiData().onTapFunction = a;
                    if (H) this.on("touchstart", function(a) {
                        isAndroid && a.preventDefault();
                        F(window.event);
                        if ("function" === typeof f) return f(a, b(this))
                    }), this.on("touchmove", function(a) {
                        return E(window.event)
                    }), this.on("touchend", function(d) {
                        window.event.preventDefault();
                        window.event.stopPropagation();
                        if ("function" === typeof functionCall && !("tap" !== D(window.event) || has(child.data("ui")) && has(child.data("ui").disabled))) return a(d,
                            b(this))
                    });
                    else this.on(w, function(d) {
                        d.preventDefault();
                        d.stopPropagation();
                        return a(d, b(this))
                    });
                    return this
                };
                b.fn.onChange = function(a) {
                    if ("function" !== typeof a) throw Error("this.onChange(action): Action not a function (" + typeof a + ")");
                    return this.each(function() {
                        b(this).uiData().onchange = a;
                        return b(this).on("change", function(f) {
                            return a(b(f.target).value())
                        })
                    })
                };
                b.fn.select = function(a, f) {
                    var d, g, e, l, n, k, p, s, m, c, q, r, u;
                    try {
                        if (null == a) return this.value();
                        null == f && (f = !1);
                        l = "number" === typeof a ? a : 0 /
                            0;
                        r = "string" === typeof a ? a : null;
                        if ("select" === this.ourType())
                            if (isNaN(l))
                                for (r = r.toLowerCase(), e = n = 0, m = this.children().length; 0 <= m ? n < m : n > m; e = 0 <= m ? ++n : --n) this.child(e).value().toLowerCase() === r ? (this.uiData().selected = e, this.child(e).prop("selected", !0)) : this.child(e).prop("selected", !1);
                            else this.attr("selectedIndex", l), this.uiData().selected = l, this.child(l).prop("selected", !0);
                        else if ("buttongroup" === this.ourType()) {
                            c = this.children();
                            k = 0;
                            for (p = c.length; k < p; k++) d = c[k], b(d).removeAttr("disabled");
                            if (isNaN(l))
                                for (r = r.toLowerCase(), e = s = 0, q = this.children().length; 0 <= q ? s < q : s > q; e = 0 <= q ? ++s : --s) this.child(e).text().toLowerCase() === r && (this.uiData().selected = e, this.child(e).attr("disabled", !0));
                            else this.uiData().selected = l, this.child(l).attr("disabled", !0)
                        }
                        if (!0 === f && isFunction(this.uiData().onchange)) try {
                            u = l, isObject(this.uiData().children[l]) && isFunction(this.uiData().children[l].value) ? u = this.uiData().children[l].value() : isNumber(l) && (u = this.uiData().children[l]), this.uiData().onchange(u)
                        } catch (w) {
                            g =
                                w, alert(g.message)
                        }
                        return this
                    } catch (x) {
                        throw g = x, Error("$.select(" + a + "): " + g);
                    }
                };
                b.fn.onEnterKeypress = function(a) {
                    if ("function" !== typeof a) throw Error("this.onEnterKeypress(action): Action not a function (" + typeof a + ")");
                    return this.each(function() {
                        b(this).uiData().onenterkeypress = a;
                        return b(this).on("keypress", function(f) {
                            try {
                                if (13 === f.keyCode) return a(b(this))
                            } catch (d) {
                                return error("onEnterKeypress.keypress", d)
                            }
                        })
                    })
                };
                b.fn.onEscapeKeypress = function(a) {
                    if ("function" !== typeof a) throw Error("this.onEscapeKeypress(action): Action not a function (" +
                        typeof a + ")");
                    return this.each(function() {
                        b(this).uiData().onEscapeKeypress = a;
                        return b(this).on("keypress", function(f) {
                            try {
                                if (27 === f.keyCode) return a(b(this))
                            } catch (d) {
                                return error("onEscapeKeypress.keypress", d)
                            }
                        })
                    })
                };
                b.fn.fixedHeader = function() {
                    this.attr("data-id", "header");
                    return this
                };
                b.fn.fixedFooter = function() {
                    this.attr("data-id", "footer");
                    return this
                };
                b.fn.setDefault = function(a) {
                    return this.select(a, !1)
                };
                b.fn.addChildClass = function(a) {
                    var b;
                    try {
                        for (b = 0; b < this.children().length;) this.child(b).addClass(a),
                            b++;
                        return this
                    } catch (d) {
                        throw Error("addChildClass(" + a + ") -> " + d.message);
                    }
                };
                b.fn.isAttached = function() {
                    return 0 < this.closest("body").length
                };
                b.fn.moveClassesFrom = function(a) {
                    var b, d, g, e;
                    d = a[0].className.split(" ");
                    for (g = 0; g < d.length;) {
                        b = !0;
                        for (e = 1; e < arguments.length;) arguments[e] === d[g] && (b = !1), e++;
                        b && (this.addClass(d[g]), a.removeClass(d[g]));
                        g++
                    }
                    return this
                };
                b.fn.draw = function(a, e) {
                    try {
                        if ("string" === typeof a && this.html() === a) return;
                        "object" === typeof this.data("ui") && "function" === typeof this.data("ui").draw ?
                            this.data("ui").draw(a) : "object" !== typeof a ? this.empty().html(a) : this.empty().append(a);
                        !b.mobile || ("boolean" === typeof e && !0 !== e || "function" !== typeof this.enhanceWithin) || this.enhanceWithin()
                    } catch (d) {
                        throw Error("$.draw(" + a + ") -> " + d.message);
                    }
                    return this
                };
                return b.fn.popup = function(a) {
                    try {
                        return this.each(function() {
                            var d;
                            d = b(this);
                            if ("open" === a) return d.addClass("show"), b("#popupbehind").addClass("show");
                            if ("close" === a) return b("#popupbehind").removeClass("show"), d.removeClass("show")
                        })
                    } catch (e) {
                        throw Error("$.popup(" +
                            a + ") -> " + e);
                    }
                }
            })(jQuery);
            window.error || (window.error = function(b, a, e) {
                null != a && (b += " " + a);
                "undefined" !== typeof errorMesssage && null !== errorMesssage && (b += " " + e);
                return console.log("ERROR: " + b)
            });
            return function(b) {
                var a, f, d;
                a = null;
                f = function(a, b, d) {
                    var e;
                    e = $(document.createElement(a));
                    e.uiData().node = e;
                    e.uiData().type = a;
                    "object" === typeof d && (e.uiData().elementMap = d);
                    null != b && ("object" === typeof b && b.length) && e.addChildren(b);
                    return e
                };
                d = function(a, b, d, e) {
                    var f;
                    f = $(document.createElement(b));
                    f.uiData().ourType =
                        a;
                    f.uiData().type = b;
                    f.uiData().node = f;
                    "object" === typeof e && (f.uiData().elementMap = e);
                    null != d && ("object" === typeof d && d.length) && f.addChildren(d);
                    return f
                };
                b.body = function() {
                    null == a && (a = $("body"));
                    0 < arguments.length && a.addChildren(arguments);
                    return a
                };
                b.tag = function() {
                    var a;
                    a = x(arguments);
                    a.splice(0, 1);
                    return f(arguments[0], a)
                };
                b.popup = function(a) {
                    0 === $("#popupbehind").length && ($("body").append("<div id='popupbehind'/>"), $("#popupbehind").onTap(function() {
                        return $(".popup").popup("close")
                    }));
                    return d("popup",
                        "div").addClass("popup").attr("id", a).attr("data-pop", "pop-in")
                };
                b.page = function() {
                    return d("page", "div", x(arguments)).dataRole("page").addClass("page")
                };
                b.displayPage = function(a) {
                    a.isAttached() || a.appendTo($("body"));
                    "page" !== a.attr("data-role") && a.attr("data-role", "page");
                    window.scrollTo(0, 0);
                    $("div[data-role='page'].show").removeClass("show");
                    return a.addClass("show")
                };
                b.ui = function(a) {
                    var b, d, e;
                    try {
                        if (0 === arguments.length) return "";
                        e = arguments[0];
                        if ("string" !== typeof e || null == e || 0 === e.length) return "";
                        e.startsWith("%") && (e = e.substring(1), e.endsWith("%") && (e = e.substring(0, e.length - 1)));
                        if ("undefined" === typeof UI || "undefined" === typeof UI[settings.interfacelanguage] || "undefined" === typeof UI[settings.interfacelanguage][e]) return e;
                        a = UI[settings.interfacelanguage][e];
                        if (1 < arguments.length)
                            for (b = 1; b < arguments.length;) d = a.indexOf("$" + b), 0 <= d && (a = a.substring(0, d) + arguments[b] + a.substring(d + ("$" + b).length)), b++;
                        return a
                    } catch (f) {
                        return error("ui(" + e + ")", f.message), ""
                    }
                };
                b.uiObject = function(a) {
                    return a
                };
                b.uieval = function(a) {
                    return ui(a)
                };
                b.generateUniqueID = function(a) {
                    for (var b;;)
                        if (b = Math.floor(1E7 * Math.random()) + 1, 0 === $("#" + a + b).length) return a + b
                };
                b.pause = function(a) {
                    null == a && (a = !0);
                    return e.paused = a
                };
                return b.debug = function(a) {
                    null == a && (a = !0);
                    return e.debuggingOn = a
                }
            }(window)
        }
    };
    $(document).ready(function() {
        var w;
        try {
            console.log("introtoapps v.20170510.1");
            e.init();
            if (null != ("undefined" !== typeof config && null !== config ? config.appName : void 0) && null != window.loadDB) try {
                loadDB()
            } catch (p) {
                w = p, error("ready().loadDB()",
                    w)
            }
            if (window.onLoad) window.onLoad();
            if (window.displayMain) return window.displayMain()
        } catch (x) {
            return w = x, error("ready()", w)
        }
    })
}).call(this);